local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Fly system
local flying = false
local flySpeed = 100
local moveKeys = {
	W = false,
	A = false,
	S = false,
	D = false,
	Space = false,
	Shift = false
}

local humanoid = nil
local rootPart = nil
local flyConnection = nil

local function GetFlyDirection()
	local camCF = Camera.CFrame
	local forward = camCF.LookVector
	local right = camCF.RightVector
	local up = Vector3.new(0, 1, 0)
	local direction = Vector3.zero

	if moveKeys.W then direction += forward end
	if moveKeys.S then direction -= forward end
	if moveKeys.A then direction -= right end
	if moveKeys.D then direction += right end
	if moveKeys.Space then direction += up end
	if moveKeys.Shift then direction -= up end

	return direction.Magnitude > 0 and direction.Unit * flySpeed or Vector3.zero
end

local function StartFlying()
	if not humanoid or not rootPart then return end
	flying = true
	humanoid:ChangeState(Enum.HumanoidStateType.Swimming)

	flyConnection = RunService.RenderStepped:Connect(function()
		if not flying then return end
		local direction = GetFlyDirection()
		rootPart.Velocity = direction
		local camLook = Camera.CFrame.LookVector
		rootPart.CFrame = CFrame.new(rootPart.Position, rootPart.Position + Vector3.new(camLook.X, 0, camLook.Z))
	end)
end

local function StopFlying()
	flying = false
	if flyConnection then flyConnection:Disconnect() end
	if rootPart then rootPart.Velocity = Vector3.zero end
	if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.GettingUp) end
end

local function SetupCharacter(char)
	humanoid = char:WaitForChild("Humanoid")
	rootPart = char:WaitForChild("HumanoidRootPart")
	StopFlying()
end

if LocalPlayer.Character then
	SetupCharacter(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(SetupCharacter)

-- Aim lock
local targetPlayer = nil
local isLocked = false
local maxDistance = 100
local aimThreshold = 0.98

local function GetTarget()
	local best = nil
	local bestDot = -1
	local origin = Camera.CFrame.Position
	local direction = Camera.CFrame.LookVector

	for _, p in pairs(Players:GetPlayers()) do
		if p ~= LocalPlayer and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
			local root = p.Character.HumanoidRootPart
			local toTarget = root.Position - origin
			local dist = toTarget.Magnitude
			if dist <= maxDistance then
				local unit = toTarget.Unit
				local dot = direction:Dot(unit)
				if dot > aimThreshold and dot > bestDot then
					best = p
					bestDot = dot
				end
			end
		end
	end

	return best
end

RunService.RenderStepped:Connect(function()
	if isLocked and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local pos = targetPlayer.Character.HumanoidRootPart.Position
		Camera.CFrame = CFrame.new(Camera.CFrame.Position, pos)
	end
end)

-- Input Handler
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	local key = input.KeyCode

	if key == Enum.KeyCode.Q then
		if flying then StopFlying() else StartFlying() end

	elseif key == Enum.KeyCode.E then
		if isLocked then
			isLocked = false
			targetPlayer = nil
		else
			local target = GetTarget()
			if target then
				targetPlayer = target
				isLocked = true
			end
		end

	elseif key == Enum.KeyCode.W then moveKeys.W = true
	elseif key == Enum.KeyCode.A then moveKeys.A = true
	elseif key == Enum.KeyCode.S then moveKeys.S = true
	elseif key == Enum.KeyCode.D then moveKeys.D = true
	elseif key == Enum.KeyCode.Space then moveKeys.Space = true
	elseif key == Enum.KeyCode.LeftShift then moveKeys.Shift = true
	end
end)

UserInputService.InputEnded:Connect(function(input)
	local key = input.KeyCode
	if key == Enum.KeyCode.W then moveKeys.W = false
	elseif key == Enum.KeyCode.A then moveKeys.A = false
	elseif key == Enum.KeyCode.S then moveKeys.S = false
	elseif key == Enum.KeyCode.D then moveKeys.D = false
	elseif key == Enum.KeyCode.Space then moveKeys.Space = false
	elseif key == Enum.KeyCode.LeftShift then moveKeys.Shift = false
	end
end)

-- GUI
local gui = Instance.new("ScreenGui")
gui.Name = "DXZZshackGUI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 150)
frame.Position = UDim2.new(0.5, -150, 0.5, -75)
frame.BackgroundColor3 = Color3.fromRGB(90, 0, 0)
frame.Active = true
frame.Draggable = true
frame.Parent = gui

local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0, 12)
frameCorner.Parent = frame

local title = Instance.new("TextLabel")
title.Text = "DXZZ Shack"
title.Font = Enum.Font.Cartoon
title.TextColor3 = Color3.new(0, 0, 0)
title.TextScaled = true
title.Size = UDim2.new(1, 0, 0.3, 0)
title.BackgroundTransparency = 1
title.Parent = frame

local flyLabel = Instance.new("TextLabel")
flyLabel.Text = "Press Q for Fly"
flyLabel.Font = Enum.Font.Gotham
flyLabel.TextColor3 = Color3.new(1, 1, 1)
flyLabel.TextScaled = true
flyLabel.Size = UDim2.new(0.45, 0, 0.25, 0)
flyLabel.Position = UDim2.new(0.05, 0, 0.6, 0)
flyLabel.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
flyLabel.Parent = frame

local flyCorner = Instance.new("UICorner")
flyCorner.CornerRadius = UDim.new(0, 8)
flyCorner.Parent = flyLabel

local lockLabel = Instance.new("TextLabel")
lockLabel.Text = "Press E to Lock"
lockLabel.Font = Enum.Font.Gotham
lockLabel.TextColor3 = Color3.new(1, 1, 1)
lockLabel.TextScaled = true
lockLabel.Size = UDim2.new(0.45, 0, 0.25, 0)
lockLabel.Position = UDim2.new(0.5, 0, 0.6, 0)
lockLabel.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
lockLabel.Parent = frame

local lockCorner = Instance.new("UICorner")
lockCorner.CornerRadius = UDim.new(0, 8)
lockCorner.Parent = lockLabel
